# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserGrp {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int!

  """사용자 그룹명"""
  nmUserGrp: String!

  """사용자 그룹타입"""
  tpUserGrp: String
  users: [User!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int!

  """사용자ID"""
  idLogin: String!
  userGrp: UserGrp
  healthRecords: [HealthRecord!]

  """사용자명"""
  nmUser: String!

  """생년월일"""
  ddBirth: String

  """비밀번호"""
  password: String!

  """만료일"""
  ddExpire: String
}

type HealthMarkGrp {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int!

  """건강지표 그룹명"""
  nmGrpMark: String!

  """건강지표 그룹타입"""
  tpGrp: String!
}

type HealthMark {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int!
  grpMark: HealthMarkGrp

  """건강지표"""
  nmMark: String!

  """건강지표(다른표기법)"""
  nmMarkOption: String

  """단위"""
  unit: String

  """정상기준(이상)"""
  strNormal: Float

  """정상기준(이하)"""
  endNormal: Float

  """중요도"""
  severity: Float
}

type HealthRecord {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int!
  user: User

  """기록타입"""
  tpRecord: Int!

  """기록값(숫자)"""
  record1: Float

  """기록값(문자)"""
  record2: String

  """건강기록 측정일"""
  ddRegister: String
}

type CreateHealthMarkOutput {
  cnt: Float
  reason: String
  token: String
  idHealthMark: Int
}

type CreateHealthMarkGrpOutput {
  cnt: Float
  reason: String
  token: String
  idHealthMarkGrp: Int
}

type FindHealthRecordOutput {
  cnt: Float
  reason: String
  token: String
  healthRecord: [HealthRecord!]
}

type FindHealthMarkGrpOutput {
  cnt: Float
  reason: String
  token: String
  healthMarkGrp: [HealthMarkGrp!]
}

type FindHealthMarkOutput {
  cnt: Float
  reason: String
  token: String
  healthMark: [HealthMark!]
}

type CreateHealthRecordOutput {
  cnt: Float
  reason: String
  token: String
  idHealthRecord: Int
}

type SearchUserOutput {
  cnt: Float
  reason: String
  token: String
  user: [User!]
}

type SearchGrpUsersOutput {
  cnt: Float
  reason: String
  token: String
  users: [User!]
}

type CreateAccountOutput {
  cnt: Float
  reason: String
  token: String
  idUser: Int
}

type LoginOutput {
  cnt: Float
  reason: String
  token: String
}

type UpdateProfileOutput {
  cnt: Float
  reason: String
  token: String
}

type ExpireProfileOutput {
  cnt: Float
  reason: String
  token: String
}

type Query {
  findHealthMarkGrp(input: FindHealthMarkGrpInput!): FindHealthMarkGrpOutput!
  findHealthMark(input: FindHealthMarkInput!): FindHealthMarkOutput!
  findHealthRecord(input: FindHealthRecordInput!): FindHealthRecordOutput!
  searchGrpUsers(input: SearchGrpUsersInput!): SearchGrpUsersOutput!
  searchUser(input: SearchUserInput!): SearchUserOutput!
  login(input: LoginInput!): LoginOutput!
  me: User!
}

input FindHealthMarkGrpInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int

  """건강지표 그룹명"""
  nmGrpMark: String

  """건강지표 그룹타입"""
  tpGrp: String
}

input FindHealthMarkInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int
  grpMark: HealthMarkGrpInput

  """건강지표"""
  nmMark: String

  """건강지표(다른표기법)"""
  nmMarkOption: String

  """단위"""
  unit: String

  """정상기준(이상)"""
  strNormal: Float

  """정상기준(이하)"""
  endNormal: Float

  """중요도"""
  severity: Float
}

input HealthMarkGrpInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int!

  """건강지표 그룹명"""
  nmGrpMark: String!

  """건강지표 그룹타입"""
  tpGrp: String!
}

input FindHealthRecordInput {
  idUser: Int!
  idHealthMark: Int
  dtRecordStart: DateTime
  dtRecordEnd: DateTime
}

input SearchGrpUsersInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int

  """사용자 그룹명"""
  nmUserGrp: String

  """사용자 그룹타입"""
  tpUserGrp: String
  token: String!
}

input SearchUserInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String

  """사용자ID"""
  idLogin: String
  userGrp: UserGrpInput
  healthRecords: [HealthRecordInput!]

  """사용자명"""
  nmUser: String

  """생년월일"""
  ddBirth: String

  """만료일"""
  ddExpire: String
  idUserGrp: Int
  idUser: Int
}

input UserGrpInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int!

  """사용자 그룹명"""
  nmUserGrp: String!

  """사용자 그룹타입"""
  tpUserGrp: String
  users: [UserInput!]
}

input UserInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int!

  """사용자ID"""
  idLogin: String!
  userGrp: UserGrpInput
  healthRecords: [HealthRecordInput!]

  """사용자명"""
  nmUser: String!

  """생년월일"""
  ddBirth: String

  """비밀번호"""
  password: String!

  """만료일"""
  ddExpire: String
}

input HealthRecordInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  id: Int!
  user: UserInput

  """기록타입"""
  tpRecord: Int!

  """기록값(숫자)"""
  record1: Float

  """기록값(문자)"""
  record2: String

  """건강기록 측정일"""
  ddRegister: String
}

input LoginInput {
  """사용자ID"""
  idLogin: String!

  """비밀번호"""
  password: String!
}

type Mutation {
  createHealthMarkGrp(input: CreateHealthMarkGrpInput!): CreateHealthMarkGrpOutput!
  createHealthMark(input: CreateHealthMarkInput!): CreateHealthMarkOutput!
  createHealthRecord(input: CreateHealthRecordInput!): CreateHealthRecordOutput!
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  updateProfile(input: UpdateProfileInput!): UpdateProfileOutput!
  expireProfile(input: ExpireProfileInput!): ExpireProfileOutput!
}

input CreateHealthMarkGrpInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String

  """건강지표 그룹명"""
  nmGrpMark: String!

  """건강지표 그룹타입"""
  tpGrp: String!
}

input CreateHealthMarkInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  grpMark: HealthMarkGrpInput

  """건강지표"""
  nmMark: String!

  """건강지표(다른표기법)"""
  nmMarkOption: String

  """단위"""
  unit: String

  """정상기준(이상)"""
  strNormal: Float

  """정상기준(이하)"""
  endNormal: Float

  """중요도"""
  severity: Float
  idHealthMarkGrp: Int!
}

input CreateHealthRecordInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """상세설명"""
  desc: String
  user: UserInput

  """기록타입"""
  tpRecord: Int!

  """기록값(숫자)"""
  record1: Float

  """기록값(문자)"""
  record2: String

  """건강기록 측정일"""
  ddRegister: String
  idUser: Int!
  idHealthMark: Int!
}

input CreateAccountInput {
  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Int!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Int

  """사용자ID"""
  idLogin: String!
  healthRecords: [HealthRecordInput!]

  """사용자명"""
  nmUser: String!

  """생년월일"""
  ddBirth: String

  """만료일"""
  ddExpire: String

  """사용자 그룹명"""
  nmUserGrp: String

  """사용자 그룹타입"""
  tpUserGrp: String

  """사용자 그룹 코멘트"""
  descUserGrp: String

  """사용자 코멘트"""
  descUser: String
  idUser: Int

  """비밀번호"""
  password: String!
  token: String!
}

input UpdateProfileInput {
  """사용자ID"""
  idLogin: String
  userGrp: UserGrpInput

  """사용자명"""
  nmUser: String

  """생년월일"""
  ddBirth: String

  """비밀번호"""
  password: String

  """만료일"""
  ddExpire: String
}

input ExpireProfileInput {
  """사용자ID"""
  idLogin: String!
}