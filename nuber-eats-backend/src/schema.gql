# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserGrp {
  id: Float!

  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Float!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Float

  """상세설명"""
  desc: String

  """사용자 그룹명"""
  nmUserGrp: String!

  """사용자 그룹타입"""
  tpUserGrp: String!
  users: [User!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: Float!

  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Float!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Float

  """상세설명"""
  desc: String
  userGrp: UserGrp

  """사용자명"""
  name: String!

  """생년월일"""
  birthdate: String
}

type HealthMarkOutput {
  id: Float

  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Float

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Float

  """상세설명"""
  desc: String

  """건강지표"""
  nmMark: String

  """건강지표(다른표기법)"""
  nmMarkOption: String

  """단위"""
  unit: String

  """정상기준(이상)"""
  strNormal: Float

  """정상기준(이하)"""
  endNormal: Float

  """중요도"""
  severity: Float
}

type UserOutput {
  id: Float

  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Float

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Float

  """상세설명"""
  desc: String
  userGrp: UserGrp

  """사용자명"""
  name: String

  """생년월일"""
  birthdate: String
}

type Query {
  findHealthMark(id: Float!): HealthMarkOutput
  allHealthMarks: [HealthMarkOutput!]!
  findGrpUsers(idUserGrp: Float!): [UserOutput!]
  findUser(idUser: Float!): UserOutput
}

type Mutation {
  addHealthMark(
    """등록일시"""
    dtInsert: DateTime

    """등록자"""
    idInsert: Float!

    """수정일시"""
    dtUpdate: DateTime

    """수정자"""
    idUpdate: Float

    """상세설명"""
    desc: String

    """건강지표"""
    nmMark: String!

    """건강지표(다른표기법)"""
    nmMarkOption: String

    """단위"""
    unit: String = "EA"

    """정상기준(이상)"""
    strNormal: Float

    """정상기준(이하)"""
    endNormal: Float

    """중요도"""
    severity: Float! = 1
  ): Boolean!
  insertUserGrp(
    """등록일시"""
    dtInsert: DateTime

    """등록자"""
    idInsert: Float!

    """수정일시"""
    dtUpdate: DateTime

    """수정자"""
    idUpdate: Float

    """상세설명"""
    desc: String

    """사용자 그룹명"""
    nmUserGrp: String!

    """사용자 그룹타입"""
    tpUserGrp: String! = "GENERAL"
    users: [UserInput!]
  ): Boolean!
  insertUser(
    """등록일시"""
    dtInsert: DateTime

    """등록자"""
    idInsert: Float!

    """수정일시"""
    dtUpdate: DateTime

    """수정자"""
    idUpdate: Float

    """상세설명"""
    desc: String
    userGrp: UserGrpInput

    """사용자명"""
    name: String!

    """생년월일"""
    birthdate: String
  ): Boolean!
}

input UserInput {
  id: Float!

  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Float!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Float

  """상세설명"""
  desc: String
  userGrp: UserGrpInput

  """사용자명"""
  name: String!

  """생년월일"""
  birthdate: String
}

input UserGrpInput {
  id: Float!

  """등록일시"""
  dtInsert: DateTime

  """등록자"""
  idInsert: Float!

  """수정일시"""
  dtUpdate: DateTime

  """수정자"""
  idUpdate: Float

  """상세설명"""
  desc: String

  """사용자 그룹명"""
  nmUserGrp: String!

  """사용자 그룹타입"""
  tpUserGrp: String! = "GENERAL"
  users: [UserInput!]
}